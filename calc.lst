     1                                  section .data
     2                                  	; Strings
     3 00000000 7E2043616C63756C61-     	msgtitle	db	'~ Calculator ~',0xa
     4 00000009 746F72207E0A       
     5                                  	lmsgtitle	equ	$-msgtitle
     6                                  
     7 0000000F 456E74657220666972-     	msgnum1		db	'Enter first number: '
     8 00000018 7374206E756D626572-
     9 00000021 3A20               
    10                                  	lmsgnum1	equ	$-msgnum1
    11                                  
    12 00000023 456E74657220736563-     	msgnum2		db	'Enter second number: '
    13 0000002C 6F6E64206E756D6265-
    14 00000035 723A20             
    15                                  	lmsgnum2	equ	$-msgnum2
    16                                  
    17 00000038 53656C656374206F70-     	msgop		db	'Select operation:',0xa
    18 00000041 65726174696F6E3A0A 
    19                                  	lmsgop		equ	$-msgop
    20                                  
    21 0000004A 20312E204164640A        	msgadd		db	' 1. Add',0xa
    22                                  	lmsgadd		equ	$-msgadd
    23                                  
    24 00000052 20322E205375627472-     	msgsubtract	db	' 2. Subtract',0xa
    25 0000005B 6163740A           
    26                                  	lmsgsubtract	equ	$-msgsubtract
    27                                  
    28 0000005F 3E20                    	msgprompt	db	'> '
    29                                  	lmsgprompt	equ	$-msgprompt
    30                                  
    31 00000061 416E737765723A20        	msgans		db	'Answer: '
    32                                  	lmsgans		equ	$-msgans
    33                                  
    34                                  section .bss
    35                                  	; Variables to store math numbers and stuff in
    36                                  	; digits input by user are received as ascii representations of those digits (each digit is 1 byte)
    37 00000000 <res 00000008>          	num1	resb	8
    38 00000008 <res 00000008>          	num2	resb	8
    39 00000010 <res 00000001>          	op	resb	1
    40 00000011 <res 00000008>          	ans	resb	8
    41                                  
    42                                  section .text
    43                                  global _start
    44                                  
    45                                  _start:
    46                                  	; print msgtitle
    47 00000000 B804000000              	mov	eax,4		; sys_write
    48 00000005 BB01000000              	mov	ebx,1		; stdout
    49 0000000A B9[00000000]            	mov	ecx,msgtitle
    50 0000000F BA0F000000              	mov	edx,lmsgtitle
    51 00000014 CD80                    	int	0x80
    52                                  
    53                                  	; print msgnum1
    54 00000016 B804000000              	mov	eax,4		; sys_write
    55 0000001B BB01000000              	mov	ebx,1		; stdout
    56 00000020 B9[0F000000]            	mov	ecx,msgnum1
    57 00000025 BA14000000              	mov	edx,lmsgnum1
    58 0000002A CD80                    	int	0x80
    59                                  
    60                                  	; read in first number to num1
    61 0000002C B803000000              	mov	eax,3		; sys_read
    62 00000031 BB00000000              	mov	ebx,0		; stdin
    63 00000036 B9[00000000]            	mov	ecx,num1
    64 0000003B BA02000000              	mov	edx,2
    65 00000040 CD80                    	int	0x80
    66                                  
    67                                  	; print msgnum2
    68 00000042 B804000000              	mov	eax,4		; sys_write
    69 00000047 BB01000000              	mov	ebx,1		; stdout
    70 0000004C B9[23000000]            	mov	ecx,msgnum2
    71 00000051 BA15000000              	mov	edx,lmsgnum2
    72 00000056 CD80                    	int	0x80
    73                                  
    74                                  	; read in second number to num2
    75 00000058 B803000000              	mov	eax,3		; sys_read
    76 0000005D BB00000000              	mov	ebx,0		; stdin
    77 00000062 B9[08000000]            	mov	ecx,num2
    78 00000067 BA02000000              	mov	edx,2
    79 0000006C CD80                    	int	0x80
    80                                  
    81                                  	; print msgop
    82 0000006E B804000000              	mov	eax,4		; sys_write
    83 00000073 BB01000000              	mov	ebx,1		; stdout
    84 00000078 B9[38000000]            	mov	ecx,msgop
    85 0000007D BA12000000              	mov	edx,lmsgop
    86 00000082 CD80                    	int	0x80
    87                                  
    88                                  	; print msgadd
    89 00000084 B804000000              	mov	eax,4		; sys_write
    90 00000089 BB01000000              	mov	ebx,1		; stdout
    91 0000008E B9[4A000000]            	mov	ecx,msgadd
    92 00000093 BA08000000              	mov	edx,lmsgadd
    93 00000098 CD80                    	int	0x80
    94                                  
    95                                  	; print msgsubtract
    96 0000009A B804000000              	mov	eax,4		; sys_write
    97 0000009F BB01000000              	mov	ebx,1		; stdout
    98 000000A4 B9[52000000]            	mov	ecx,msgsubtract
    99 000000A9 BA0D000000              	mov	edx,lmsgsubtract
   100 000000AE CD80                    	int	0x80
   101                                  
   102                                  	; print msgprompt
   103 000000B0 B804000000              	mov	eax,4		; sys_write
   104 000000B5 BB01000000              	mov	ebx,1		; stdout
   105 000000BA B9[5F000000]            	mov	ecx,msgprompt
   106 000000BF BA02000000              	mov	edx,lmsgprompt
   107 000000C4 CD80                    	int	0x80
   108                                  
   109                                  	; read in desired operation to op
   110 000000C6 B803000000              	mov	eax,3		; sys_read
   111 000000CB BB00000000              	mov	ebx,0		; stdin
   112 000000D0 B9[10000000]            	mov	ecx,op
   113 000000D5 BA01000000              	mov	edx,1
   114 000000DA CD80                    	int	0x80
   115                                  
   116                                  	; test for user's choice
   117 000000DC A1[10000000]            	mov	eax,[op]	; store user's selection in eax
   118 000000E1 83E830                  	sub	eax,'0'		; convert from ascii to decimal
   119                                  
   120 000000E4 83F801                  	cmp	eax,1		; operation = 1 (add)
   121 000000E7 7411                    	je	add
   122 000000E9 83F802                  	cmp	eax,2		; operation = 2 (subtract)
   123 000000EC 745F                    	je	subtract
   124                                  
   125                                  	; exit program with error code 1 if no jumps were made
   126 000000EE B801000000              	mov	eax,1		; sys_exit
   127 000000F3 BB01000000              	mov	ebx,1
   128 000000F8 CD80                    	int	0x80
   129                                  
   130                                  add:
   131 000000FA A1[00000000]            	mov	eax,[num1]	; store first number in eax
   132 000000FF 8B1D[08000000]          	mov	ebx,[num2]	; store second number in ebx
   133                                  
   134 00000105 83E830                  	sub	eax,'0'		; convert num1 from ascii to decimal
   135 00000108 83EB30                  	sub	ebx,'0'		; convert num2 from ascii to decimal
   136                                  
   137 0000010B 01D8                    	add	eax,ebx		; add num2 to num1, storing result in num1
   138                                  
   139 0000010D 83C030                  	add	eax,'0'		; convert from decimal to ascii
   140                                  
   141 00000110 A3[11000000]            	mov	[ans],eax	; move result in eax to ans
   142                                  
   143                                  	; print msgans
   144 00000115 B804000000              	mov	eax,4		; sys_write
   145 0000011A BB01000000              	mov	ebx,1		; stdout
   146 0000011F B9[61000000]            	mov	ecx,msgans
   147 00000124 BA08000000              	mov	edx,lmsgans
   148 00000129 CD80                    	int	0x80
   149                                  
   150                                  	; print ans
   151 0000012B B804000000              	mov	eax,4		; sys_write
   152 00000130 BB01000000              	mov	ebx,1		; stdout
   153 00000135 B9[11000000]            	mov	ecx,ans
   154 0000013A BA08000000              	mov	edx,8
   155 0000013F CD80                    	int	0x80
   156                                  
   157                                  	; exit program
   158 00000141 B801000000              	mov	eax,1		; sys_exit
   159 00000146 BB00000000              	mov	ebx,0
   160 0000014B CD80                    	int	0x80
   161                                  
   162                                  subtract:
   163 0000014D B801000000              	mov	eax,1		; sys_exit
   164 00000152 BB00000000              	mov	ebx,0
   165 00000157 CD80                    	int	0x80
